@using Microsoft.AspNetCore.Identity
@inject SignInManager<FileConvertPro.Models.ApplicationUser> SignInManager
@inject UserManager<FileConvertPro.Models.ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    var user = await UserManager.GetUserAsync(User);
    var firstName = user?.FirstName ?? "User";
    
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            <i class="fas fa-user-circle me-1"></i> Hello @firstName!
        </a>
        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
            <li><a class="dropdown-item" asp-controller="Account" asp-action="Profile"><i class="fas fa-id-card me-2"></i>My Profile</a></li>
            <li><a class="dropdown-item" asp-controller="Account" asp-action="ChangePassword"><i class="fas fa-key me-2"></i>Change Password</a></li>
            <li><a class="dropdown-item" asp-controller="FileConversion" asp-action="History"><i class="fas fa-history me-2"></i>My Conversions</a></li>
            <li><hr class="dropdown-divider"></li>
            <li>
                <form class="form-inline" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="dropdown-item"><i class="fas fa-sign-out-alt me-2"></i>Logout</button>
                </form>
            </li>
        </ul>
    </li>
}
else
{
    <li class="nav-item me-2">
        <a class="nav-link btn btn-outline-light" asp-controller="Account" asp-action="Register">
            <i class="fas fa-user-plus me-1"></i> Register
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link btn btn-light" asp-controller="Account" asp-action="Login">
            <i class="fas fa-sign-in-alt me-1"></i> Login
        </a>
    </li>
}
</ul>
